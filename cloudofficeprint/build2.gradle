plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.github.jk1.dependency-license-report' version '1.17'
    id 'signing'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    implementation group: 'org.apache.tika', name: 'tika-core', version: '1.13'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {
    // Do not allow duplicates by ignoring subsequent items to be created at the same path.
    duplicatesStrategy = 'exclude'

    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }

    // Include the imported dependencies in our output .jar file
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

signing {
    sign publishing.publications
}

version '21.2.0'
publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'com.cloudofficeprint'
            artifactId 'cloudofficeprint'

            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'A Java interface for Cloud Office Print'
            name 'Cloud Office Print'
            url 'https://github.com/United-Codes/cloudofficeprint-java'
            issueManagement {
                system 'GitHub'
                url 'https://github.com/United-Codes/cloudofficeprint-java/issues'
            }
            licenses {
                license {
                    name 'GNU General Public License v3.0'
                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                }
            }
            scm {
                url 'https://github.com/United-Codes/cloudofficeprint-java'
                connection 'scm:git:git://github.com/United-Codes/cloudofficeprint-java.git'
                developerConnection 'scm:git:ssh://github.com/United-Codes/cloudofficeprint-java.git'
            }
            developers {
                developer {
                    id 'unitedcodes'
                    name 'United Codes'
                    email 'info@united-codes.com'
                }
            }
        }
    }
}
