/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.github.jk1.dependency-license-report' version '1.17'
    id 'signing'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.32'

    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.1.0'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {
    // Do not allow duplicates by ignoring subsequent items to be created at the same path.
    duplicatesStrategy = 'exclude'

    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }

    // Include the imported dependencies in our output .jar file
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

java {
    withJavadocJar()
    withSourcesJar()
}

signing {
    sign publishing.publications
}

version = '21.2.0'
// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             artifactId = 'cloudofficeprint'
//             groupId = 'com.cloudofficeprint'
//             from components.java
//             pom {
//                 name = 'Cloud Office Print'
//                 description = 'A Java interface for Cloud Office Print'
//                 url = 'https://github.com/United-Codes/cloudofficeprint-java'
//                 licenses {
//                     license {
//                         name = 'GNU General Public License v3.0'
//                         url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
//                     }
//                 }
//                 issueManagement {
//                     system = 'GitHub'
//                     url = 'https://github.com/United-Codes/cloudofficeprint-java/issues'
//                 }
//                 developers {
//                     developer {
//                         id = 'unitedcodes'
//                         name = 'United Codes'
//                         email = 'info@united-codes.com'
//                     }
//                 }
//                 scm {
//                     connection = 'scm:git:git://github.com/United-Codes/cloudofficeprint-java.git'
//                     developerConnection = 'scm:git:ssh://github.com/United-Codes/cloudofficeprint-java.git'
//                     url = 'https://github.com/United-Codes/cloudofficeprint-java'
//                 }
//             }
//         }
//     }
//     repositories {
//         maven {
//             // change URLs to point to your repos, e.g. http://my.org/repo
//             def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//             def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//             url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//             credentials {
//                 username = sonatypeUsername
//                 password = sonatypePassword
//             }
//         }
//     }
// }
